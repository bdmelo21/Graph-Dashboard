{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bernardodemelo/Desktop/Modatta_FE/modatta_fe/src/Components/table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"day\",\n  label: \"Day\",\n  minWidth: 170\n}, {\n  id: \"accepted\",\n  label: \"Accepted\",\n  minWidth: 170,\n  align: \"left\"\n}, {\n  id: \"declined\",\n  label: \"Declined\",\n  minWidth: 170,\n  align: \"left\"\n}];\n\nfunction createData(day, accepted, declined) {\n  return {\n    day,\n    accepted,\n    declined\n  };\n}\n\nconst rows = [createData(\"2020-07-21\", 380, 40), createData(\"2020-07-22\", 70, 20), createData(\"2020-07-23\", 50, 10), createData(\"2020-07-24\", 50, 30), createData(\"2020-07-25\", 60, 90)];\nconst useStyles = makeStyles({\n  root: {\n    width: \"95%\",\n    marginLeft: \"30px\",\n    marginTop: \"50px\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-table\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this),\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(EqualizerIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }, this),\n        children: \"Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-secondary\",\n          label: \"Outlined secondary\",\n          variant: \"outlined\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === \"number\" ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/Users/bernardodemelo/Desktop/Modatta_FE/modatta_fe/src/Components/table.js"],"names":["React","makeStyles","Button","FileCopyIcon","EqualizerIcon","TextField","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","createData","day","accepted","declined","rows","useStyles","root","width","marginLeft","marginTop","container","maxHeight","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","button","map","column","slice","row","format","code","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  { id: \"day\", label: \"Day\", minWidth: 170 },\n  { id: \"accepted\", label: \"Accepted\", minWidth: 170, align: \"left\" },\n  { id: \"declined\", label: \"Declined\", minWidth: 170, align: \"left\" },\n];\n\nfunction createData(day, accepted, declined) {\n  return { day, accepted, declined };\n}\n\nconst rows = [\n  createData(\"2020-07-21\", 380, 40),\n  createData(\"2020-07-22\", 70, 20),\n  createData(\"2020-07-23\", 50, 10),\n  createData(\"2020-07-24\", 50, 30),\n  createData(\"2020-07-25\", 60, 90),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"95%\",\n    marginLeft: \"30px\",\n    marginTop: \"50px\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <div className=\"buttons-table\">\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          className={classes.button}\n          startIcon={<FileCopyIcon />}\n        >\n          Copy\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          className={classes.button}\n          startIcon={<EqualizerIcon />}\n        >\n          Excel\n        </Button>\n      </div>\n      <div>\n        <form>\n          <TextField\n            id=\"outlined-secondary\"\n            label=\"Outlined secondary\"\n            variant=\"outlined\"\n            color=\"secondary\"\n          />\n        </form>\n      </div>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.code}\n                    >\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\"\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}